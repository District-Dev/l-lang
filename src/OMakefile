.SUBDIRS: support token parser cps llvm libl

# All this is for compilation_passes. TODO: Use indentation to reduce
# the scope of FILES[] etc.
tests: main libl/libl.bc
	cd .. && echo $(PWD) && OCAMLRUNPARAM="b" ./src/main --fixed

ABORT_ON_DEPENDENCY_ERRORS = true
FILES[] =
FILES[] += constant
FILES[] += tokenpack token
FILES[] += parserpack parser
FILES[] += ../next/ast/ast
FILES[] += $(addprefix cps/, \
	   cpsbasepack cpsbase cpsfree cpsconvertclosures)
FILES[] += cps/cpstransformpack cps/cpstransform
FILES[] += llvm/llvmenv llvm/cpsllvm llvm/llvmexec
FILES[] += compilation_passes pretty_print
FILES[] += main
OCAML_LIBS[] = support/support

OCAMLINCLUDES +=  . cps support llvm ../next/ast

OCAMLPACKS = llvm-3_0 llvm-3_0.bitreader llvm-3_0.executionengine llvm-3_0.analysis llvm-3_0.bitwriter

OCamlProgram(main, $(FILES))

all: main.run

OCamlPackage(tokenpack, $(addprefix token/, intern base lexer keywords))
token.cmo token.cmi: support/key.cmi tokenpack.cmi

OCamlPackage(parserpack, $(addprefix parser/, \
	tdop parsetree common  \
	path expression definition))

compilation_passes.cmo compilation_passes.cmi: ../next/ast/ast.cmi
main.cmo main.cmi: ../next/ast/ast.cmi

# TODO: Encapsulate CPS into a pack. Currently this triggers an error
# in the union-find data structure.
# OCamlPackage(cpspack, $(addprefix cps/,\
# 			cpstransform \
# 			cpsconvertclosures cpsfree \
# 			cpsbase cpsbasepack))



L2HTML_FILES[] = l2html tokenpack token \
		 $(addprefix parser/, tdop parsetree common\
				      type expression definition)\

OCAML_LIBS[] = support/support
OCamlProgram(l2html, $(L2HTML_FILES))

# HERE NEttoyer le parseur, en utilisant ca pour tester si besoin.
# Execute this with omake -R build/src/l2html.test
l2html.test: l2html
	./l2html
